{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"irgsctool Getting Started This package is a tool to generate the catalog of Natural Guide Stars (NGS) based on the requirements of the NFIRAOS, the facility Adaptive Optics system on the Thirty Meter Telescope (TMT). This tool obtains the optical data from PANSTARRS DR2 and generates a catalog of the computed Near-Infrared (NIR) magnitudes. There is also an option in this tool to validate the computed NIR magnitudes using the readily available NIR observed data from UKIDSS DR11 (in the regions where the UKIDSS data is available.) Installation This package can be installed in two ways: 1. Using pip In a fresh environment, enter the following command pip install irgsctool 2. Uing .zip file on GitHub here After downloading the .zip file, unzip it into a directory and type pip install . This will install irgsctool locally in your system. 3. Using the Development version from GitHub: Open the terminal in your system and run: pip install git+https://github.com/sshah1502/irgsc@main This will also install the package locally in your system.","title":"Home"},{"location":"index.html#irgsctool","text":"","title":"irgsctool"},{"location":"index.html#getting-started","text":"This package is a tool to generate the catalog of Natural Guide Stars (NGS) based on the requirements of the NFIRAOS, the facility Adaptive Optics system on the Thirty Meter Telescope (TMT). This tool obtains the optical data from PANSTARRS DR2 and generates a catalog of the computed Near-Infrared (NIR) magnitudes. There is also an option in this tool to validate the computed NIR magnitudes using the readily available NIR observed data from UKIDSS DR11 (in the regions where the UKIDSS data is available.)","title":"Getting Started"},{"location":"index.html#installation","text":"This package can be installed in two ways:","title":"Installation"},{"location":"index.html#1-using-pip","text":"In a fresh environment, enter the following command pip install irgsctool","title":"1. Using pip"},{"location":"index.html#2-uing-zip-file-on-github-here","text":"After downloading the .zip file, unzip it into a directory and type pip install . This will install irgsctool locally in your system.","title":"2. Uing .zip file on GitHub here"},{"location":"index.html#3-using-the-development-version-from-github","text":"Open the terminal in your system and run: pip install git+https://github.com/sshah1502/irgsc@main This will also install the package locally in your system.","title":"3. Using the Development version from GitHub:"},{"location":"about.html","text":"About irgsctool irgsctool to generate the catalog of NIR guide stars for Adaptive Optics (AO) observations of the Thirty Meter Telescope (TMT). The module computes the NIR magnitudes of the optical sources in the PANSTARRS data. Motivation to generate irgsctool The performance of any ground-based optical/near-infrared (NIR) telescope is affected by the turbulence in the atmosphere of Earth. When the light from a distant astronomical source passes through Earth's turbulent atmosphere, it distorts the wavefront of the light. These distortions make the science images appear fuzzy/blurry. To improve the performance of the ground-based optical/NIR telescopes by compensating for the effects of wavefront distortions, astronomers use a technique known as Adaptive Optics (AO). An AO system tries to correct the distortions using a WaveFront Sensor (WFS), which takes some of the astronomical light, a deformable mirror that lies in the optical path, and a computer that receives input from the detector (Refer Figure: (1)). Figure 1: A conceptual image of the working of an AO system. A WFS is a high-speed camera that detects the deformity in the incoming light several thousand times per second. After measuring the deformity, the WFS sends feedback to the system-controlling computer, which then changes the shape of the deformable mirror so that the light eventually becomes distortion-free. This distortion-free light is then fed to the science instruments in the telescopes to obtain high-quality images with a spatial resolution close to the theoretical diffraction limit. A science target to be studied is often too faint or extended to be used as a reference for measuring the shape of the incident wave-fronts. Instead, a nearby brighter guide star can be used for distortion correction. But, sufficiently bright stars are not available in all parts of the sky, which significantly limits the usefulness of natural guide star AO. This limitation can be overcome by creating an artificial guide star by shining a laser into the mesosphere and creating an asterism. However, much fainter natural reference stars are still required for image position or tip/tilt correction. The Thirty Meter Telescope (TMT) is one of the largest optical and near-infrared (NIR) ground-based telescopes to be built, and the first light is expected in the next decade. The first light NIR instruments of TMT will be assisted by a multi-conjugate AO instrument, known as Narrow Field Infrared Adaptive Optics System (NFIRAOS) (see Figure: (2)). NFIRAOS will have a field of view (FOV) of 2-arcmin diameter and will use laser guide stars (LGS) for distortion correction. However, it will require three or more natural guide stars for tip/tilt correction. A catalog of guide stars will thus be a critical resource for TMT operations. It will enable efficient planning and observations, fulfilling a role similar to that of the Guide Star Catalogs I and II, which were created to allow for the acquisition and control of the Hubble Space Telescope. The TMT Infrared Guide Star Catalog (TMT-IRGSC) should be a star catalog consisting of point sources with NIR (J, H, Ks) magnitudes as faint as 22 mag in the J band in the Vega system covering the entire TMT-observable sky. No catalog currently exists with objects as faint as J_Vega = 22 mag over the entire TMT observable sky to be used as a guide star catalog. Hence it is essential to develop this catalog by computing the expected NIR magnitudes of stellar sources identified in various optical sky surveys using their optical magnitudes. Figure 2: A rendered image of the facility AO system on TMT - NFIRAOS. Nature of the generated catalog The IRGSC generated has various information about the sources shown in the following Table. This table describes the columns in the IRGSC generated for a particular test field. The details of the flags, e.g., infoflags, filterflags, and qualityflags can be found here . These flags indicate various values assigned to the source by the PANSTARRS team, which gives further information about the nature of the source and the quality of its detection, which can help understand more about a particular object of interest. It is to be noted that although this package relies on the PANSTARRS StackObjectView table, the Right Ascension and Declination of the source is obtained from the mean photometric information as they are well calibrated using Gaia DR2. Column Name Description Data Type PS1_ObjID Source identifier in the PANSTARRS data float PS1_ra Right Ascencion of the source in the PANSTARRS DR2 weighted mean photometry float PS1_ra_error Uncertainty in PS1_ra float PS1_dec Declination of the source in the PANSTARRS DR2 weighted mean photometry float PS1_dec_error Uncertainty in the PS1_dec float PS1_gpsf psf magnitude of the source in the g-band stacked photometry float PS1_gpsf Uncertainty in PS1_gpsf PS1_rpsf psf magnitude of the source in the r-band stacked photometry float PS1_rpsf Uncertainty in PS1_rpsf float PS1_ipsf psf magnitude of the source in the i-band stacked photometry float PS1_ipsf Uncertainty in PS1_ipsf float PS1_zpsf psf magnitude of the source in the z-band stacked photometry float PS1_zpsf Uncertainty in PS1_zpsf float PS1_ypsf psf magnitude of the source in the y-band stacked photometry float PS1_ypsf Uncertainty in PS1_ypsf float SAM_Name Name of the best-fitted Stellar Atmospheric Model (SAM) string Teff Best-fitted model parameter: Teff float logg Best-fitted model parameter: log(g) float [Fe/H] Best-fitted model parameter: [Fe/H] float sam_g Best-fitted model magnitudes in PANSTARRS g-filter float sam_r Best-fitted model magnitudes in PANSTARRS r-filter float sam_i Best-fitted model magnitudes in PANSTARRS i-filter float sam_z Best-fitted model magnitudes in PANSTARRS z-filter float sam_y Best-fitted model magnitudes in PANSTARRS y-filter float sam_j Best-fitted model magnitudes in PANSTARRS j-filter float sam_h Best-fitted model magnitudes in PANSTARRS h-filter float sam_k Best-fitted model magnitudes in PANSTARRS k-filter float scale factor The scale factor computed after fitting the SAM float scale factor error Error in the computed scale factor float d_dev The parameter denoting the goodness-of-fit float Computed J The computed J magnitude in the Vega system float Computed J error Error in computed J magnitude float Computed H The computed H magnitude in the Vega system float Computed H error Error in computed H magnitude float Computed K The computed K magnitude in the Vega system float Computed K error Error in computed K magnitude float gaia source id Source identifier in Gaia DR3 float gaia ra Right Ascension of the source in Gaia DR3 catalog float gaia ra error Uncertainty in gaia ra float gaia dec Declination of the source in Gaia DR3 catalog float gaia dec error Uncertainty in gaia dec float gaia parallax Parallax (mas) of the source in the Gaia DR3 catalog float gaia parallax error Uncertainty in gaia parallax float gaia pm pm of the source (mas/yr) in Gaia DR3 catalog float gaia pm ra pm of the source along R.A. axis in the Gaia DR3 catalog float gaia pm ra error Uncertainty gaia pm ra float gaia pm dec pm of the source along Dec. axis in the Gaia DR3 catalog float gaia pm dec error Uncertainty gaia pm dec float gaia ruwe Renormalised Unit Weight Error flag of the source in Gaia DR3 float objinfoflag These flag values of the source in PANSTARRS data specify whether the object is a QSO, transient, asteroid, extended, a known solar system object, etc. in nature float objqualityflag These flag values denote if an object is real or a possible false positive float ndetections The number of times something is detected from the individual exposures float nstackdetections The number of stack detections after which the stack photometric measurements are done float ginfoflag These flags indicate the details of the g filter stack photometry float ginfoflag2 These flags indicate the details of the g filter stack photometry float ginfoflag3 These flags indicate the details of the g filter stack photometry float rinfoflag These flags indicate the details of the r filter stack photometry float rinfoflag2 These flags indicate the details of the r filter stack photometry float rinfoflag3 These flags indicate the details of the r filter stack photometry float iinfoflag These flags indicate the details of the i filter stack photometry float iinfoflag2 These flags indicate the details of the i filter stack photometry float iinfoflag3 These flags indicate the details of the i filter stack photometry float zinfoflag These flags indicate the details of the z filter stack photometry float zinfoflag2 These flags indicate the details of the z filter stack photometry float zinfoflag3 These flags indicate the details of the z filter stack photometry float yinfoflag These flags indicate the details of the y filter stack photometry float yinfoflag2 These flags indicate the details of the y filter stack photometry float yinfoflag3 These flags indicate the details of the y filter stack photometry float Application of irgsctool on fields The method developed for the generation of IRGSC has applied on twenty test fields across the sky. The generaed IRGSC is also valiated using the UKIDSS data available for those fields and the generated as well as validated catalog for these fields can be found in the generated_irgsc directory. In addition to the twenty test fields, additional ten catalogs are provided for the PANSTARRS Medium Deep Survey (MDS) Fields more information available here . Out of eleven MDS fields, one field coincides with M31. Hence it is skipped here since the MDS data is not publically released by the PANSTARRS, the optical data to generate the IRGSC for these fields is been taken from the 3-pi PANSTARRS survey. In case of validation using the UKIDSS observed NIR data, certain fields have observations in only one or two out of the J, H and K bands. This package takes care of these issues and validates the generated IRGSC using the available band data.","title":"About"},{"location":"about.html#about-irgsctool","text":"irgsctool to generate the catalog of NIR guide stars for Adaptive Optics (AO) observations of the Thirty Meter Telescope (TMT). The module computes the NIR magnitudes of the optical sources in the PANSTARRS data.","title":"About irgsctool"},{"location":"about.html#motivation-to-generate-irgsctool","text":"The performance of any ground-based optical/near-infrared (NIR) telescope is affected by the turbulence in the atmosphere of Earth. When the light from a distant astronomical source passes through Earth's turbulent atmosphere, it distorts the wavefront of the light. These distortions make the science images appear fuzzy/blurry. To improve the performance of the ground-based optical/NIR telescopes by compensating for the effects of wavefront distortions, astronomers use a technique known as Adaptive Optics (AO). An AO system tries to correct the distortions using a WaveFront Sensor (WFS), which takes some of the astronomical light, a deformable mirror that lies in the optical path, and a computer that receives input from the detector (Refer Figure: (1)). Figure 1: A conceptual image of the working of an AO system. A WFS is a high-speed camera that detects the deformity in the incoming light several thousand times per second. After measuring the deformity, the WFS sends feedback to the system-controlling computer, which then changes the shape of the deformable mirror so that the light eventually becomes distortion-free. This distortion-free light is then fed to the science instruments in the telescopes to obtain high-quality images with a spatial resolution close to the theoretical diffraction limit. A science target to be studied is often too faint or extended to be used as a reference for measuring the shape of the incident wave-fronts. Instead, a nearby brighter guide star can be used for distortion correction. But, sufficiently bright stars are not available in all parts of the sky, which significantly limits the usefulness of natural guide star AO. This limitation can be overcome by creating an artificial guide star by shining a laser into the mesosphere and creating an asterism. However, much fainter natural reference stars are still required for image position or tip/tilt correction. The Thirty Meter Telescope (TMT) is one of the largest optical and near-infrared (NIR) ground-based telescopes to be built, and the first light is expected in the next decade. The first light NIR instruments of TMT will be assisted by a multi-conjugate AO instrument, known as Narrow Field Infrared Adaptive Optics System (NFIRAOS) (see Figure: (2)). NFIRAOS will have a field of view (FOV) of 2-arcmin diameter and will use laser guide stars (LGS) for distortion correction. However, it will require three or more natural guide stars for tip/tilt correction. A catalog of guide stars will thus be a critical resource for TMT operations. It will enable efficient planning and observations, fulfilling a role similar to that of the Guide Star Catalogs I and II, which were created to allow for the acquisition and control of the Hubble Space Telescope. The TMT Infrared Guide Star Catalog (TMT-IRGSC) should be a star catalog consisting of point sources with NIR (J, H, Ks) magnitudes as faint as 22 mag in the J band in the Vega system covering the entire TMT-observable sky. No catalog currently exists with objects as faint as J_Vega = 22 mag over the entire TMT observable sky to be used as a guide star catalog. Hence it is essential to develop this catalog by computing the expected NIR magnitudes of stellar sources identified in various optical sky surveys using their optical magnitudes. Figure 2: A rendered image of the facility AO system on TMT - NFIRAOS.","title":"Motivation to generate irgsctool"},{"location":"about.html#nature-of-the-generated-catalog","text":"The IRGSC generated has various information about the sources shown in the following Table. This table describes the columns in the IRGSC generated for a particular test field. The details of the flags, e.g., infoflags, filterflags, and qualityflags can be found here . These flags indicate various values assigned to the source by the PANSTARRS team, which gives further information about the nature of the source and the quality of its detection, which can help understand more about a particular object of interest. It is to be noted that although this package relies on the PANSTARRS StackObjectView table, the Right Ascension and Declination of the source is obtained from the mean photometric information as they are well calibrated using Gaia DR2. Column Name Description Data Type PS1_ObjID Source identifier in the PANSTARRS data float PS1_ra Right Ascencion of the source in the PANSTARRS DR2 weighted mean photometry float PS1_ra_error Uncertainty in PS1_ra float PS1_dec Declination of the source in the PANSTARRS DR2 weighted mean photometry float PS1_dec_error Uncertainty in the PS1_dec float PS1_gpsf psf magnitude of the source in the g-band stacked photometry float PS1_gpsf Uncertainty in PS1_gpsf PS1_rpsf psf magnitude of the source in the r-band stacked photometry float PS1_rpsf Uncertainty in PS1_rpsf float PS1_ipsf psf magnitude of the source in the i-band stacked photometry float PS1_ipsf Uncertainty in PS1_ipsf float PS1_zpsf psf magnitude of the source in the z-band stacked photometry float PS1_zpsf Uncertainty in PS1_zpsf float PS1_ypsf psf magnitude of the source in the y-band stacked photometry float PS1_ypsf Uncertainty in PS1_ypsf float SAM_Name Name of the best-fitted Stellar Atmospheric Model (SAM) string Teff Best-fitted model parameter: Teff float logg Best-fitted model parameter: log(g) float [Fe/H] Best-fitted model parameter: [Fe/H] float sam_g Best-fitted model magnitudes in PANSTARRS g-filter float sam_r Best-fitted model magnitudes in PANSTARRS r-filter float sam_i Best-fitted model magnitudes in PANSTARRS i-filter float sam_z Best-fitted model magnitudes in PANSTARRS z-filter float sam_y Best-fitted model magnitudes in PANSTARRS y-filter float sam_j Best-fitted model magnitudes in PANSTARRS j-filter float sam_h Best-fitted model magnitudes in PANSTARRS h-filter float sam_k Best-fitted model magnitudes in PANSTARRS k-filter float scale factor The scale factor computed after fitting the SAM float scale factor error Error in the computed scale factor float d_dev The parameter denoting the goodness-of-fit float Computed J The computed J magnitude in the Vega system float Computed J error Error in computed J magnitude float Computed H The computed H magnitude in the Vega system float Computed H error Error in computed H magnitude float Computed K The computed K magnitude in the Vega system float Computed K error Error in computed K magnitude float gaia source id Source identifier in Gaia DR3 float gaia ra Right Ascension of the source in Gaia DR3 catalog float gaia ra error Uncertainty in gaia ra float gaia dec Declination of the source in Gaia DR3 catalog float gaia dec error Uncertainty in gaia dec float gaia parallax Parallax (mas) of the source in the Gaia DR3 catalog float gaia parallax error Uncertainty in gaia parallax float gaia pm pm of the source (mas/yr) in Gaia DR3 catalog float gaia pm ra pm of the source along R.A. axis in the Gaia DR3 catalog float gaia pm ra error Uncertainty gaia pm ra float gaia pm dec pm of the source along Dec. axis in the Gaia DR3 catalog float gaia pm dec error Uncertainty gaia pm dec float gaia ruwe Renormalised Unit Weight Error flag of the source in Gaia DR3 float objinfoflag These flag values of the source in PANSTARRS data specify whether the object is a QSO, transient, asteroid, extended, a known solar system object, etc. in nature float objqualityflag These flag values denote if an object is real or a possible false positive float ndetections The number of times something is detected from the individual exposures float nstackdetections The number of stack detections after which the stack photometric measurements are done float ginfoflag These flags indicate the details of the g filter stack photometry float ginfoflag2 These flags indicate the details of the g filter stack photometry float ginfoflag3 These flags indicate the details of the g filter stack photometry float rinfoflag These flags indicate the details of the r filter stack photometry float rinfoflag2 These flags indicate the details of the r filter stack photometry float rinfoflag3 These flags indicate the details of the r filter stack photometry float iinfoflag These flags indicate the details of the i filter stack photometry float iinfoflag2 These flags indicate the details of the i filter stack photometry float iinfoflag3 These flags indicate the details of the i filter stack photometry float zinfoflag These flags indicate the details of the z filter stack photometry float zinfoflag2 These flags indicate the details of the z filter stack photometry float zinfoflag3 These flags indicate the details of the z filter stack photometry float yinfoflag These flags indicate the details of the y filter stack photometry float yinfoflag2 These flags indicate the details of the y filter stack photometry float yinfoflag3 These flags indicate the details of the y filter stack photometry float","title":"Nature of the generated catalog"},{"location":"about.html#application-of-irgsctool-on-fields","text":"The method developed for the generation of IRGSC has applied on twenty test fields across the sky. The generaed IRGSC is also valiated using the UKIDSS data available for those fields and the generated as well as validated catalog for these fields can be found in the generated_irgsc directory. In addition to the twenty test fields, additional ten catalogs are provided for the PANSTARRS Medium Deep Survey (MDS) Fields more information available here . Out of eleven MDS fields, one field coincides with M31. Hence it is skipped here since the MDS data is not publically released by the PANSTARRS, the optical data to generate the IRGSC for these fields is been taken from the 3-pi PANSTARRS survey. In case of validation using the UKIDSS observed NIR data, certain fields have observations in only one or two out of the J, H and K bands. This package takes care of these issues and validates the generated IRGSC using the available band data.","title":"Application of irgsctool on fields"},{"location":"acknowledgements.html","text":"Please add the following acknowledgment if you use our package in your work. This work has made use of Infrared Guide Star Catalog (IRGSC) developed as a part of the Thirty Meter Telescope (TMT) project.\" If you have any questions or suggestions for improvements to this repo, please email: sarang.itcc@iiap.res.in","title":"Acknowledgements"},{"location":"apireference.html","text":"API Reference This page introduces to the classes and functions in the irgsctool package. The main class is the irgsc class which has several subclasses like GetData , ReadData , StarGalaxyClassification , ExtinctionCorrection , GenerateIRGSC , ValidateIRGSC . Figure (1) shows the UML diagram of the irgsctool package. Figure 1: The UML diagram of the irgsctool package. irgsc ( ra , dec , validate = None ) Initialisation of parent irgsc class . This class has several child classes. This method described using input ra and dec. It checks whther the data from PANSTARRS DR2, UKISS DR11 and Gaia DR3 can be obtained. RAISES DESCRIPTION ValueError if the data is not available in UKIDSS or PANSTARRS 3-pi survey. The code will not proceed further. Warning if the data is not available in the Gaia DR3 survey. In the IRGSC, the Gaia values will be replaces with -999. GetData ( ra , dec ) GetData class contains methods to obtain PANSTARRS DR2 stacked optical photometry data, UKIDSS NIR observed data and GAIA DR3 astrometry data. The default search radius is 0.25 degrees due to the limitation of pyvo. The data retrieved is stored in .csv format with the name of the survey + str(ra) + str(dec) Examples: >>> irgsctool . GetData . get_panstarrs_data ( 0.0 , 0.0 ) 'PS1_RA_0_0_DEC_0_0.csv' >>> irgsctool . GetData . get_gaia_data ( 0.0 , 0.0 ) 'GAIA_RA_0_0_DEC_0_0.csv' >>> irgsctool . GetData . get_ukidss_data ( 0.0 , 0.0 ) 'UKIDSS_RA_0_0_DEC_0_0.csv' get_gaia_data () irgsctool.GetData.get_gaia_data() This function sends a query to obtain GAIA DR3 data using the astroquery module. The ROW_LIMIT is set to -1 which implies that the query retriees all the rows in the given field. get_panstarrs_data () irgsctool.GetData.get_panstarrs_data() This function sends a query to obtain the PANSTARRS data from DR2 database. The query uses pyvo TAPService module for retrieving the data. The data is selected from StackObjectView db and the maximum search radius is 0.25 degrees. get_ukidss_data () irgsctool.GetData.get_ukidss_data() This function sends a query to obtain UKIDSS DR11 NIR data using astroquery. UKIDSS consists of five sub-surveys viz. UDS, GPS, GCS, DXS and LAS. The query loops over this surveys and retrieves the data for the given coordinates. The surveys which do not contain J and H band data, the function sends an alert. <\\justify> ReadData ( ra , dec ) ReadData class contains methods to read the photometric data from PS1 DR2, GAIA DR3 and UKIDSS DR11. read_gaia_data () Reads the input GAIA DR3 data. The number of columns are 12. read_nir_data () Reads the input UKIDSS NIR data. The number of columns are 8. Returns the input optical data with nan values removed (if present) and restricts the data to the sources having SNR >= 5. Some regions do not have J or H band data especially DXS or GCS surveys. For these regions, only K band data is imported. read_optical_data () irgsctool.ReadData.read_optical_data() This function reads the input optical PANSTARRS data. The number of columns in the input file are 32. After reading the input data, this function filters it for nan values (if present) and restricts the data to the sources having detection in all the five bands and that have SNR atleast 5. This data is then fed to the Star-Galaxy classification routine to seperate stars and galaxies in the data. <\\justify> RAISES DESCRIPTION FileNotFoundError if the optical input data file is not available. StarGalaxyClassification ( ra , dec ) StarGalaxyClassification class contains star_galaxy_classification() method which is used to seperate the stars and galaxies in the PANSTARRS optical data. star_galaxy_classification () irgsctool.StarGalaxyClassification.star_galaxy_classification() This method is used to seperate stars and galaxies using the condition applied to all the five optical filters: $$ (psf-kron) < 0.05 $$ This relation filters the input optical data for only probable stellar sources. The (psf-kron) diagram showing stars and galaxies in the data as well as (g-r) vs (r-i) CCD is also plotted by this method. RETURNS DESCRIPTION ndarray PANSTARRS data containing most probable stellar sources ExtinctionCorrection ( ra , dec ) ExtinctionCorrection class has two methods; one to obtain the reddening and NIR extinction coefficients, while the other to correct the PANSTARRS data for extinction in each optical filter. extinction_corrected_photometry () irgsctool.ExtinctionCorrection.extinction_correctdd_photometry() This method corrects the input optical PANSTARRS data for reddening and extinction along the line of site. RETURNS DESCRIPTION ndarray Extinction corrected PANSTARRS optical photometry. get_reddening () irgsctool.ExtinctionCorrection.get_reddening() This method obtains the reddening value for a given set of input coordinates from Schelgel et.al. 1998 (sfd) reddening map. irgsctool uses Schlafly & Finkbeiner 2011 (snf) reddening map which is snf = 0.86*sfd. RAISES DESCRIPTION FileNotFoundError if the sfd files are not present. RETURNS DESCRIPTION ebv Reddening from Schlafly & Finkbeiner 2011 err_ebv Uncertinty in reddening aj J-band extinction coefficient. ah H-band extinction coefficient. ak K-band extinction coefficient. Models ( use_sam = None ) Models class reads and selects the required Kurucz and Phoenix stellar atmospheric models in the generation of IRGSC. read_sam_file () irgsctool.Models.read_sam_file(use_sam=None) This method reads the model parameters and results from the interpolated Kurucz or the Phoenix model files. use_sam is bool and decides which model file to be read. To use the interpolated Kurucz models, set use_sam = Kurucz . Similarly, use_sam = Phoenix to use interpolated Phoenix models. RAISES DESCRIPTION AttributeError if use_sam is None. FileNotFoundError if the model files are not found. select_sam_range ( teff_range = None , logg_range = None , feh_range = None ) irgsctool.Models.select_sam_range(teff_range=None, logg_range=None, feh_range=None, use_optimal_method=False) This method selects the range of the models to be used in the generation of IRGSC. If use_optimal_method is set to True, the following range of model parameters is selected: Model Name (T_{eff}) (K) log(g) (dex) [Fe/H] (dex) Phoenix (C1) 2800 - 5000 3.0 - 5.5 -5.0 - -1.5 Phoenix (C2) 2800 - 4000 0.0 - 3.0 -0.5 - 1.5 KuruczCastelli-Kurucz (K0) 4000 - 10000 --- --- RETURNS DESCRIPTION sam_params type: ndarray: Selected model parameters and model magnitudes to generate IRGSC RAISES DESCRIPTION TypreError if range of parameters is not given. GenerateIRGSC ( ra , dec ) The GenerateIRGSC class hosts method to generate a catalog of probable stellar sources in the PANSTARRS data with their computed magnitudes, astrometric information from GAIA DR3 data, best fitted model parameters and flags. generate_irgsc ( use_optimal_method = True ) irgsctool.GenerateIRGSC.generate_irgsc(use_optimal_method=True) This method finds the best fitting model to the observed colors of the stellar source. The best fitting model is chosen from a combination of Kurucz/Castelli-Kurucz and Phoenix synthetic spectra convolved with the PANSTARRS response function (or BANDPASS) which is integrated w.r.t. the wavelength and normalised to the product of the PANSTARRS response function and wavelength. This is also called as Effective Stimulus (ES). $$ ES = \\frac{\\int{F_{\\lambda}P_{\\lambda}{\\lambda} d{\\lambda}}}{\\int{P_{\\lambda}{\\lambda}d{\\lambda}}} $$ The spectra is obtained from pysynphot ( More information here ). RETURNS DESCRIPTION irgsc_data The generated IRGSC. ValidateIRGSC ( ra , dec ) The Validate class includes methods to validate the generated irgsc, generate a validated catalog and plot the comparison of the observed and computed NIR magnitudes. read_irgsc () irgsctool.validate.read_irgsc() This function reads the generated IRGSC for a given set of coordinates. RAISES DESCRIPTION FileNotFoundError This error arises if there is no generated IRGSC validate ( validate = None ) irgsctool.ValidateIRGSC.calidate(validate=True) This method compares the observed and computed NIR magnitudes for a given field. If this is set to True, the method first obtains the UKIDSS data for the given field. The output is a validated IRGSC and plots showing the comparison of the computed NIR magnitudes with the observed ones. RAISES DESCRIPTION ValueError if validate is False","title":"API"},{"location":"apireference.html#api-reference","text":"This page introduces to the classes and functions in the irgsctool package. The main class is the irgsc class which has several subclasses like GetData , ReadData , StarGalaxyClassification , ExtinctionCorrection , GenerateIRGSC , ValidateIRGSC . Figure (1) shows the UML diagram of the irgsctool package. Figure 1: The UML diagram of the irgsctool package.","title":"API Reference"},{"location":"apireference.html#irgsctool.irgsc","text":"Initialisation of parent irgsc class . This class has several child classes. This method described using input ra and dec. It checks whther the data from PANSTARRS DR2, UKISS DR11 and Gaia DR3 can be obtained. RAISES DESCRIPTION ValueError if the data is not available in UKIDSS or PANSTARRS 3-pi survey. The code will not proceed further. Warning if the data is not available in the Gaia DR3 survey. In the IRGSC, the Gaia values will be replaces with -999.","title":"irgsc"},{"location":"apireference.html#irgsctool._get_data.GetData","text":"GetData class contains methods to obtain PANSTARRS DR2 stacked optical photometry data, UKIDSS NIR observed data and GAIA DR3 astrometry data. The default search radius is 0.25 degrees due to the limitation of pyvo. The data retrieved is stored in .csv format with the name of the survey + str(ra) + str(dec) Examples: >>> irgsctool . GetData . get_panstarrs_data ( 0.0 , 0.0 ) 'PS1_RA_0_0_DEC_0_0.csv' >>> irgsctool . GetData . get_gaia_data ( 0.0 , 0.0 ) 'GAIA_RA_0_0_DEC_0_0.csv' >>> irgsctool . GetData . get_ukidss_data ( 0.0 , 0.0 ) 'UKIDSS_RA_0_0_DEC_0_0.csv'","title":"GetData"},{"location":"apireference.html#irgsctool._get_data.GetData.get_gaia_data","text":"irgsctool.GetData.get_gaia_data() This function sends a query to obtain GAIA DR3 data using the astroquery module. The ROW_LIMIT is set to -1 which implies that the query retriees all the rows in the given field.","title":"get_gaia_data()"},{"location":"apireference.html#irgsctool._get_data.GetData.get_panstarrs_data","text":"irgsctool.GetData.get_panstarrs_data() This function sends a query to obtain the PANSTARRS data from DR2 database. The query uses pyvo TAPService module for retrieving the data. The data is selected from StackObjectView db and the maximum search radius is 0.25 degrees.","title":"get_panstarrs_data()"},{"location":"apireference.html#irgsctool._get_data.GetData.get_ukidss_data","text":"irgsctool.GetData.get_ukidss_data() This function sends a query to obtain UKIDSS DR11 NIR data using astroquery. UKIDSS consists of five sub-surveys viz. UDS, GPS, GCS, DXS and LAS. The query loops over this surveys and retrieves the data for the given coordinates. The surveys which do not contain J and H band data, the function sends an alert. <\\justify>","title":"get_ukidss_data()"},{"location":"apireference.html#irgsctool._read_data.ReadData","text":"ReadData class contains methods to read the photometric data from PS1 DR2, GAIA DR3 and UKIDSS DR11.","title":"ReadData"},{"location":"apireference.html#irgsctool._read_data.ReadData.read_gaia_data","text":"Reads the input GAIA DR3 data. The number of columns are 12.","title":"read_gaia_data()"},{"location":"apireference.html#irgsctool._read_data.ReadData.read_nir_data","text":"Reads the input UKIDSS NIR data. The number of columns are 8. Returns the input optical data with nan values removed (if present) and restricts the data to the sources having SNR >= 5. Some regions do not have J or H band data especially DXS or GCS surveys. For these regions, only K band data is imported.","title":"read_nir_data()"},{"location":"apireference.html#irgsctool._read_data.ReadData.read_optical_data","text":"","title":"read_optical_data()"},{"location":"apireference.html#irgsctool._read_data.ReadData.read_optical_data--irgsctoolreaddataread_optical_data","text":"This function reads the input optical PANSTARRS data. The number of columns in the input file are 32. After reading the input data, this function filters it for nan values (if present) and restricts the data to the sources having detection in all the five bands and that have SNR atleast 5. This data is then fed to the Star-Galaxy classification routine to seperate stars and galaxies in the data. <\\justify> RAISES DESCRIPTION FileNotFoundError if the optical input data file is not available.","title":"irgsctool.ReadData.read_optical_data()"},{"location":"apireference.html#irgsctool._sgc.StarGalaxyClassification","text":"StarGalaxyClassification class contains star_galaxy_classification() method which is used to seperate the stars and galaxies in the PANSTARRS optical data.","title":"StarGalaxyClassification"},{"location":"apireference.html#irgsctool._sgc.StarGalaxyClassification.star_galaxy_classification","text":"irgsctool.StarGalaxyClassification.star_galaxy_classification() This method is used to seperate stars and galaxies using the condition applied to all the five optical filters: $$ (psf-kron) < 0.05 $$ This relation filters the input optical data for only probable stellar sources. The (psf-kron) diagram showing stars and galaxies in the data as well as (g-r) vs (r-i) CCD is also plotted by this method. RETURNS DESCRIPTION ndarray PANSTARRS data containing most probable stellar sources","title":"star_galaxy_classification()"},{"location":"apireference.html#irgsctool._extinction_correction.ExtinctionCorrection","text":"ExtinctionCorrection class has two methods; one to obtain the reddening and NIR extinction coefficients, while the other to correct the PANSTARRS data for extinction in each optical filter.","title":"ExtinctionCorrection"},{"location":"apireference.html#irgsctool._extinction_correction.ExtinctionCorrection.extinction_corrected_photometry","text":"irgsctool.ExtinctionCorrection.extinction_correctdd_photometry() This method corrects the input optical PANSTARRS data for reddening and extinction along the line of site. RETURNS DESCRIPTION ndarray Extinction corrected PANSTARRS optical photometry.","title":"extinction_corrected_photometry()"},{"location":"apireference.html#irgsctool._extinction_correction.ExtinctionCorrection.get_reddening","text":"irgsctool.ExtinctionCorrection.get_reddening() This method obtains the reddening value for a given set of input coordinates from Schelgel et.al. 1998 (sfd) reddening map. irgsctool uses Schlafly & Finkbeiner 2011 (snf) reddening map which is snf = 0.86*sfd. RAISES DESCRIPTION FileNotFoundError if the sfd files are not present. RETURNS DESCRIPTION ebv Reddening from Schlafly & Finkbeiner 2011 err_ebv Uncertinty in reddening aj J-band extinction coefficient. ah H-band extinction coefficient. ak K-band extinction coefficient.","title":"get_reddening()"},{"location":"apireference.html#irgsctool._sam.Models","text":"Models class reads and selects the required Kurucz and Phoenix stellar atmospheric models in the generation of IRGSC.","title":"Models"},{"location":"apireference.html#irgsctool._sam.Models.read_sam_file","text":"irgsctool.Models.read_sam_file(use_sam=None) This method reads the model parameters and results from the interpolated Kurucz or the Phoenix model files. use_sam is bool and decides which model file to be read. To use the interpolated Kurucz models, set use_sam = Kurucz . Similarly, use_sam = Phoenix to use interpolated Phoenix models. RAISES DESCRIPTION AttributeError if use_sam is None. FileNotFoundError if the model files are not found.","title":"read_sam_file()"},{"location":"apireference.html#irgsctool._sam.Models.select_sam_range","text":"irgsctool.Models.select_sam_range(teff_range=None, logg_range=None, feh_range=None, use_optimal_method=False) This method selects the range of the models to be used in the generation of IRGSC. If use_optimal_method is set to True, the following range of model parameters is selected: Model Name (T_{eff}) (K) log(g) (dex) [Fe/H] (dex) Phoenix (C1) 2800 - 5000 3.0 - 5.5 -5.0 - -1.5 Phoenix (C2) 2800 - 4000 0.0 - 3.0 -0.5 - 1.5 KuruczCastelli-Kurucz (K0) 4000 - 10000 --- --- RETURNS DESCRIPTION sam_params type: ndarray: Selected model parameters and model magnitudes to generate IRGSC RAISES DESCRIPTION TypreError if range of parameters is not given.","title":"select_sam_range()"},{"location":"apireference.html#irgsctool._fitting.GenerateIRGSC","text":"The GenerateIRGSC class hosts method to generate a catalog of probable stellar sources in the PANSTARRS data with their computed magnitudes, astrometric information from GAIA DR3 data, best fitted model parameters and flags.","title":"GenerateIRGSC"},{"location":"apireference.html#irgsctool._fitting.GenerateIRGSC.generate_irgsc","text":"irgsctool.GenerateIRGSC.generate_irgsc(use_optimal_method=True) This method finds the best fitting model to the observed colors of the stellar source. The best fitting model is chosen from a combination of Kurucz/Castelli-Kurucz and Phoenix synthetic spectra convolved with the PANSTARRS response function (or BANDPASS) which is integrated w.r.t. the wavelength and normalised to the product of the PANSTARRS response function and wavelength. This is also called as Effective Stimulus (ES). $$ ES = \\frac{\\int{F_{\\lambda}P_{\\lambda}{\\lambda} d{\\lambda}}}{\\int{P_{\\lambda}{\\lambda}d{\\lambda}}} $$ The spectra is obtained from pysynphot ( More information here ). RETURNS DESCRIPTION irgsc_data The generated IRGSC.","title":"generate_irgsc()"},{"location":"apireference.html#irgsctool._validate.ValidateIRGSC","text":"The Validate class includes methods to validate the generated irgsc, generate a validated catalog and plot the comparison of the observed and computed NIR magnitudes.","title":"ValidateIRGSC"},{"location":"apireference.html#irgsctool._validate.ValidateIRGSC.read_irgsc","text":"irgsctool.validate.read_irgsc() This function reads the generated IRGSC for a given set of coordinates. RAISES DESCRIPTION FileNotFoundError This error arises if there is no generated IRGSC","title":"read_irgsc()"},{"location":"apireference.html#irgsctool._validate.ValidateIRGSC.validate","text":"irgsctool.ValidateIRGSC.calidate(validate=True) This method compares the observed and computed NIR magnitudes for a given field. If this is set to True, the method first obtains the UKIDSS data for the given field. The output is a validated IRGSC and plots showing the comparison of the computed NIR magnitudes with the observed ones. RAISES DESCRIPTION ValueError if validate is False","title":"validate()"},{"location":"license.html","text":"*License MIT License Copyright (c) 2023 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARraNTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARraNTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTraCT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \"\"\"","title":"License"},{"location":"tutorials.html","text":"irgsctool - tutorials 1. Generating IRGSC for a given set of coordinates from irgsctool import GenerateIRGSC gc = GenerateIRGSC ( ra = 0.0 , dec = 0.0 ) gc . generate_irgsc () This results in a catalog file: 'IRGSC_R_A_0_0_DEC_0_0.csv' that contains probable stellar sources in 0.25 degrees radius around the input coordinates. The following plots are also generated: Figure 1: The generated plot shows a color-color diagram where stars follow the magenta locus and the galaxies are randomly scattered. Figure 2: The (psf-kron) relation of the sources plotted on the y-axis w.r.t i-psf on the x-axis. The galaxies form a random scatter while the stellar point sources are below 0.05 on the y-axis. Figure 3: A histogram showing the depth of PANSTARRS data when only i-band observations are considered. This is sufficient depth to upto J = 22 mags in the IRGSC. Figure 4: The figure shows the histogram of the sources that are detected in all the five filters of the PANSTARRS. The condition in the generation of IRGSC that the sources must have detection in all the filters reduces the depth of the input optical data. 2. Validating the IRGSC from irgsctool import ValidateIRGSC vd = ValidateIRGSC ( 0.0 , 0.0 ) vd . validate ( validate = True ) This results in the validated catalog file: validated_IRGSC_R_A_0_0_DEC_0_0.csv' that contains additional information about the observed NIR data and the comparison between the observed and computed NIR data. This comparison when plotted appears as shown in Figure (5,6,7). Figure 5: The figure shows the comparison of the computed and observed J band magnitudes. Figure 6: The figure shows the comparison of the computed and observed J band magnitudes. Figure 7: The figure shows the comparison of the computed and observed J band magnitudes.","title":"Tutorials"},{"location":"tutorials.html#irgsctool-tutorials","text":"","title":"irgsctool - tutorials"},{"location":"tutorials.html#1-generating-irgsc-for-a-given-set-of-coordinates","text":"from irgsctool import GenerateIRGSC gc = GenerateIRGSC ( ra = 0.0 , dec = 0.0 ) gc . generate_irgsc () This results in a catalog file: 'IRGSC_R_A_0_0_DEC_0_0.csv' that contains probable stellar sources in 0.25 degrees radius around the input coordinates. The following plots are also generated: Figure 1: The generated plot shows a color-color diagram where stars follow the magenta locus and the galaxies are randomly scattered. Figure 2: The (psf-kron) relation of the sources plotted on the y-axis w.r.t i-psf on the x-axis. The galaxies form a random scatter while the stellar point sources are below 0.05 on the y-axis. Figure 3: A histogram showing the depth of PANSTARRS data when only i-band observations are considered. This is sufficient depth to upto J = 22 mags in the IRGSC. Figure 4: The figure shows the histogram of the sources that are detected in all the five filters of the PANSTARRS. The condition in the generation of IRGSC that the sources must have detection in all the filters reduces the depth of the input optical data.","title":"1. Generating IRGSC for a given set of coordinates"},{"location":"tutorials.html#2-validating-the-irgsc","text":"from irgsctool import ValidateIRGSC vd = ValidateIRGSC ( 0.0 , 0.0 ) vd . validate ( validate = True ) This results in the validated catalog file: validated_IRGSC_R_A_0_0_DEC_0_0.csv' that contains additional information about the observed NIR data and the comparison between the observed and computed NIR data. This comparison when plotted appears as shown in Figure (5,6,7). Figure 5: The figure shows the comparison of the computed and observed J band magnitudes. Figure 6: The figure shows the comparison of the computed and observed J band magnitudes. Figure 7: The figure shows the comparison of the computed and observed J band magnitudes.","title":"2. Validating the IRGSC"}]}